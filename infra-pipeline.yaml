trigger:
- main # Replace with your branch name if different

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformWorkingDirectory: './terraform' # Update if your Terraform files are in a subdirectory

stages:
- stage: TerraformInitPlanApply
  displayName: "Terraform Init, Plan, and Apply"
  jobs:
  - job: DeployAKS
    displayName: "Deploy AKS using Terraform"
    steps:
    # Install Terraform using TerraformInstaller
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest' # You can specify a version like '1.4.6'

    # Alternative: Install Terraform manually if needed
    - script: |
        echo "Checking if Terraform is installed..."
        if ! [ -x "$(command -v terraform)" ]; then
          echo "Terraform not found, installing..."
          curl -o terraform.zip https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform -version
        else
          echo "Terraform is already installed"
        fi
      displayName: "Check and Install Terraform"

    # Run Terraform commands
    - script: |
        terraform init $(terraformWorkingDirectory)
        terraform plan -out=tfplan $(terraformWorkingDirectory)
        terraform apply -auto-approve tfplan
      displayName: "Run Terraform"
